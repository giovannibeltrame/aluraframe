{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","listaAtual","obterNegociacoes","then","negociacoes","filter","some","JSON","stringify","negociacao","negociacaoExistente","catch","console","error","Error","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","erro","get","map","Date","objeto","data","quantidade","valor"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    importa(listaAtual) {\r\n        return this.obterNegociacoes()\r\n        .then(negociacoes => negociacoes.filter(negociacao => \r\n            !listaAtual.some(negociacaoExistente =>\r\n                JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente))))\r\n        .catch(error => {\r\n            console.error(error);\r\n            throw new Error('Não foi possível buscar negociaçoes para importar.');\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n        return ConnectionFactory\r\n        .getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.adiciona(negociacao))\r\n        .then(() => 'Negociação adicionada com sucesso.')\r\n        .catch(() => {\r\n            console.error(error);\r\n            throw new Error('Não foi possível adicionar a negociação.');\r\n        });\r\n    }\r\n\r\n    lista() {\r\n        return ConnectionFactory\r\n        .getConnection()\r\n        .then(connection => new NegociacaoDao(connection))\r\n        .then(dao => dao.listaTodos())\r\n        .catch(error => {\r\n            console.error(error);\r\n            throw new Error('Não foi possível obter as negociações.')\r\n        });\r\n    }\r\n\r\n    apaga() {\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(error => {\r\n                console.error(error);\r\n                throw new Error('Não foi possível apagar as negociações.');\r\n            })\r\n    }\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n\r\n            return negociacoes;\r\n\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n\r\n    } \r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana');\r\n            });  \r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n\r\n\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana anterior');\r\n            });  \r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\r\n            })\r\n            .catch(erro => {\r\n                console.error(erro);\r\n                throw new Error('Não foi possível obter as negociações da semana retrasada');\r\n            });  \r\n\r\n    }\r\n}"]}